[
  {
    "objectID": "VT0007-deforestation-map.html",
    "href": "VT0007-deforestation-map.html",
    "title": "JNR Deforestation Risk Maps",
    "section": "",
    "text": "The following details two workflow approaches to Verra’s recommended sequence of deforestation risk map development Verra (2021). For comparison purposes, both workflows use the same training sample (Stanimirova et al. 2023) and STAC-formatted Landsat Collection-2 Level-2 imagery.\nWorkflow-1 is coded in R and is recommended for smaller areas of analysis, as it offers additional functions for model tuning and classifer evaluation. Workflow-2, which is coded in Python and Google Earth Engine functions, is recommended for larger areas of interest ( (Update java link here).\n\n\n\nFigure 1: Verra’s recommended risk map development sequence (VT0007:6)"
  },
  {
    "objectID": "VT0007-deforestation-map.html#summary",
    "href": "VT0007-deforestation-map.html#summary",
    "title": "JNR Deforestation Risk Maps",
    "section": "",
    "text": "The following details two workflow approaches to Verra’s recommended sequence of deforestation risk map development Verra (2021). For comparison purposes, both workflows use the same training sample (Stanimirova et al. 2023) and STAC-formatted Landsat Collection-2 Level-2 imagery.\nWorkflow-1 is coded in R and is recommended for smaller areas of analysis, as it offers additional functions for model tuning and classifer evaluation. Workflow-2, which is coded in Python and Google Earth Engine functions, is recommended for larger areas of interest ( (Update java link here).\n\n\n\nFigure 1: Verra’s recommended risk map development sequence (VT0007:6)"
  },
  {
    "objectID": "VT0007-deforestation-map.html#testing-phase",
    "href": "VT0007-deforestation-map.html#testing-phase",
    "title": "JNR Deforestation Risk Maps",
    "section": "1.1 Testing phase",
    "text": "1.1 Testing phase\n\nJurisdictional boundaries\n\n# assign master crs\ncrs_master  = sf::st_crs(\"epsg:4326\")\naoi_country = geodata::gadm(country=\"GUY\", level=0, path=tempdir()) |&gt;\n  sf::st_as_sf() |&gt; sf::st_cast() |&gt; sf::st_transform(crs_master)\naoi_states = geodata::gadm(country=\"GUY\", level=1, path=tempdir()) |&gt;\n  sf::st_as_sf() |&gt; sf::st_cast() |&gt; sf::st_transform(crs_master) |&gt;\n  dplyr::rename(State = NAME_1)\naoi_target = dplyr::filter(aoi_states, State == \"Barima-Waini\")\n\ntmap::tmap_mode(\"view\")\ntmap::tm_shape(aoi_states) + tmap::tm_borders(col = \"white\", lwd = 0.5) +\n  tmap::tm_text(\"State\", col = \"white\", size = 1, alpha = 0.3) +\n  tmap::tm_shape(aoi_country) + tmap::tm_borders(col = \"white\", lwd = 1) +\n  tmap::tm_shape(aoi_target) + tmap::tm_borders(col = \"red\", lwd = 2) +\n  tmap::tm_text(\"State\", col = \"red\", size = 1.5) +\n  tmap::tm_basemap(\"Esri.WorldImagery\")\n\n\n\n\n\n\n\nAssemble HRP time series\nWe assemble and process a data cube representing a historical reference period (HRP) between 2013-01-01 and 2023-01-01 for the country of Suriname. Using the sits_regularize functions, we apply a cloud masking and pixel back-filling based on cloudless ranking and median-normalization across 5-year intervals to derive three dry-season mosaics for 2013, 2018 and 2023.\n# cloud-assemble data cube\ncube_raw = sits::sits_cube(\n  source      = \"MPC\",\n  collection  = \"LANDSAT-C2-L2\",\n  bands       = c(\"RED\", \"GREEN\", \"BLUE\", \"NIR08\", \"SWIR16\", \"CLOUD\"),\n  roi         = aoi_country,\n  start_date  = as.Date(\"2014-01-01\"),\n  end_date    = as.Date(\"2014-04-01\"),\n  output_dir  = here::here(\"cubes\", \"01-raw\"),\n  progress    = T\n  )\n\n# regularize data cube\ncube_reg = sits::sits_regularize(\n  cube        = cube_local,\n  roi         = aoi_country,\n  res         = 30,\n  period      = \"P5Y\",\n  output_dir  = here::here(\"cubes\", \"reg\"),\n  memsize     = 16,\n  multicores  = 4,\n  progress    = T\n  )\n\n# review cube timeline\nsits::sits_timeline(cube_reg)\n\n# plot cube timeline\nplot(cube_reg,\n  red         = \"RED\",\n  green       = \"GREEN\",\n  blue        = \"BLUE\",\n  date        = \"2013-01-01\"\n  )\n\nplot(cube_reg,\n  red         = \"RED\",\n  green       = \"GREEN\",\n  blue        = \"BLUE\",\n  date        = \"2018-01-01\"\n  )\n\nplot(cube_reg,\n  red         = \"RED\",\n  green       = \"GREEN\",\n  blue        = \"BLUE\",\n  date        = \"2023-01-01\"\n  )\n\n\n\n\n\nClassify HRP time series\nWe import the GLanCE training dataset of annual times series points that includes 7 land cover classes (Figure 2; (Woodcock et al., n.d.)). Training samples are fitted to a Random Forest model and post-processed with a Bayesian smoothing and then evaluated using confusion matrix. The classifier is then calibrated by mapping pixel uncertainty, adding new samples in areas of high uncertainty, reclassifying with improved samples and re-evaluated using confusion matrix.\n\n\n\nFigure 2: Land cover classes included in the GLanCE Level 1 classification scheme (Woodcock et al 2022)\n\n\n\n# Extract training set from gee to drive & import: https://gee-community-catalog.org/projects/glance_training/?h=training \nglance_training_url = \"https://drive.google.com/file/d/1CgBP2J2OdOhmOiVS4hGibLEMyVLTe1_P/view?usp=drive_link\"\n# file_name = \"glance_training.csv\"\n# download.file(url = url, path = here::here(\"training\"), destfile = file_name)\nglance_training = read.csv(here::here(\"training\", \"glance_training.csv\"))\n\ndata(\"samples_prodes_4classes\")\n# Select the same three bands used in the data cube\nsamples_4classes_3bands &lt;- sits_select(\n  data = samples_prodes_4classes,\n  bands = c(\"B02\", \"B8A\", \"B11\")\n  )\n\n# Train a random forest model\nrfor_model &lt;- sits_train(\n  samples = samples_4classes_3bands,\n  ml_method = sits_rfor()\n  )\n\n# Classify the small area cube\ns2_cube_probs &lt;- sits_classify(\n  data = s2_reg_cube_ro,\n  ml_model = rfor_model,\n  output_dir = \"./cubes/02_class/\",\n  memsize = 15,\n  multicores = 5\n  )\n\n# Post-process the probability cube\ns2_cube_bayes &lt;- sits_smooth(\n  cube = s2_cube_probs,\n  output_dir = \"./cubes/02_class/\",\n  memsize = 16,\n  multicores = 4\n  )\n\n# Label the post-processed  probability cube\ns2_cube_label &lt;- sits_label_classification(\n  cube = s2_cube_bayes,\n  output_dir = \"./cubes/02_class/\",\n  memsize = 16,\n  multicores = 4\n  )\n\nplot(s2_cube_label)"
  },
  {
    "objectID": "VT0007-deforestation-map.html#map-uncertainty",
    "href": "VT0007-deforestation-map.html#map-uncertainty",
    "title": "JNR Deforestation Risk Maps",
    "section": "Map uncertainty",
    "text": "Map uncertainty\nTo improve model performance, we estimate class uncertainty and plot these pixel error metrics. Results below reveal highest uncertainty levels in classification of wetland and water areas.\n\n# Calculate the uncertainty cube\ns2_cube_uncert &lt;- sits_uncertainty(\n  cube = s2_cube_bayes,\n  type = \"margin\",\n  output_dir = \"./cubes/03_error/\",\n  memsize = 16,\n  multicores = 4\n)\n\nplot(s2_cube_uncert)\n\nAs expected, the places of highest uncertainty are those covered by surface water or associated with wetlands. These places are likely to be misclassified. For this reason, sits provides sits_uncertainty_sampling(), which takes the uncertainty cube as its input and produces a tibble with locations in WGS84 with high uncertainty (Camara et al., n.d.).\n\n# Find samples with high uncertainty\nnew_samples &lt;- sits_uncertainty_sampling(\n  uncert_cube = s2_cube_uncert,\n  n = 20,\n  min_uncert = 0.5,\n  sampling_window = 10\n  )\n\n# View the location of the samples\nsits_view(new_samples)"
  },
  {
    "objectID": "VT0007-deforestation-map.html#add-training-samples",
    "href": "VT0007-deforestation-map.html#add-training-samples",
    "title": "JNR Deforestation Risk Maps",
    "section": "Add training samples",
    "text": "Add training samples\nWe can then use these points of high-uncertainty as new samples to add to our current training dataset. Once we identify their feature classes and relabel them correctly, we append them to derive an augmented samples_round_2.\n\n# Label the new samples\nnew_samples$label &lt;- \"Wetland\"\n\n# Obtain the time series from the regularized cube\nnew_samples_ts &lt;- sits_get_data(\n  cube = s2_reg_cube_ro,\n  samples = new_samples\n  )\n\n# Add new class to original samples\nsamples_round_2 &lt;- dplyr::bind_rows(\n  samples_4classes_3bands,\n  new_samples_ts\n  )\n\n# Train a RF model with the new sample set\nrfor_model_v2 &lt;- sits_train(\n  samples = samples_round_2,\n  ml_method = sits_rfor()\n  )\n\n# Classify the small area cube\ns2_cube_probs_v2 &lt;- sits_classify(\n  data = s2_reg_cube_ro,\n  ml_model = rfor_model_v2,\n  output_dir = \"./cubes/02_class/\",\n  version = \"v2\",\n  memsize = 16,\n  multicores = 4\n  )\n\n# Post-process the probability cube\ns2_cube_bayes_v2 &lt;- sits_smooth(\n  cube = s2_cube_probs_v2,\n  output_dir = \"./cubes/04_smooth/\",\n  version = \"v2\",\n  memsize = 16,\n  multicores = 4\n  )\n\n# Label the post-processed  probability cube\ns2_cube_label_v2 &lt;- sits_label_classification(\n  cube = s2_cube_bayes_v2,\n  output_dir = \"./cubes/05_tuned/\",\n  version = \"v2\",\n  memsize = 16,\n  multicores = 4\n  )\n\n# Plot the second version of the classified cube\nplot(s2_cube_label_v2)"
  },
  {
    "objectID": "VT0007-deforestation-map.html#remap-uncertainty",
    "href": "VT0007-deforestation-map.html#remap-uncertainty",
    "title": "JNR Deforestation Risk Maps",
    "section": "Remap uncertainty",
    "text": "Remap uncertainty\n\n# Calculate the uncertainty cube\ns2_cube_uncert_v2 &lt;- sits_uncertainty(\n  cube = s2_cube_bayes_v2,\n  type = \"margin\",\n  output_dir = \"./cubes/03_error/\",\n  version = \"v2\",\n  memsize = 16,\n  multicores = 4\n)\n\nplot(s2_cube_uncert_v2)"
  },
  {
    "objectID": "VT0007-deforestation-map.html#accuracy-assessment",
    "href": "VT0007-deforestation-map.html#accuracy-assessment",
    "title": "JNR Deforestation Risk Maps",
    "section": "Accuracy assessment",
    "text": "Accuracy assessment\nTo select a validation subset of the map, sits recommends Cochran’s method for stratified random sampling (Cochran 1977). The method divides the population into homogeneous subgroups, or strata, and then applying random sampling within each stratum. Alternatively, ad-hoc parameterization is suggested as follows.\n\nro_sampling_design &lt;- sits_sampling_design(\n  cube = s2_cube_label_v2,\n  expected_ua = c(\n    \"Burned_Area\"       = 0.75,\n    \"Cleared_Area\"      = 0.70,\n    \"Forest\"            = 0.75,\n    \"Highly_Degraded\"   = 0.70,\n    \"Wetland\"           = 0.70\n  ),\n  alloc_options         = c(120, 100),\n  std_err               = 0.01,\n  rare_class_prop       = 0.1\n)\n# show sampling desing\nro_sampling_design"
  },
  {
    "objectID": "VT0007-deforestation-map.html#split-traintest-data",
    "href": "VT0007-deforestation-map.html#split-traintest-data",
    "title": "JNR Deforestation Risk Maps",
    "section": "Split train/test data",
    "text": "Split train/test data\n\nro_samples_sf &lt;- sits_stratified_sampling(\n  cube                  = s2_cube_label_v2,\n  sampling_design       = ro_sampling_design,\n  alloc                 = \"alloc_120\",\n  multicores            = 4,\n  shp_file              = \"./samples/ro_samples.shp\"\n)\n\nsf::st_write(ro_samples_sf,\n  \"./samples/ro_samples.csv\",\n  layer_options = \"GEOMETRY=AS_XY\",\n  append = FALSE # TRUE if editing existing sample\n)"
  },
  {
    "objectID": "VT0007-deforestation-map.html#confusion-matrix",
    "href": "VT0007-deforestation-map.html#confusion-matrix",
    "title": "JNR Deforestation Risk Maps",
    "section": "Confusion matrix",
    "text": "Confusion matrix\n\n# Calculate accuracy according to Olofsson's method\narea_acc &lt;- sits_accuracy(s2_cube_label_v2,\n  validation = ro_samples_sf,\n  multicores = 4\n)\n# Print the area estimated accuracy\narea_acc\n\n# Print the confusion matrix\narea_acc$error_matrix"
  },
  {
    "objectID": "VT0007-deforestation-map.html#times-series-visualization",
    "href": "VT0007-deforestation-map.html#times-series-visualization",
    "title": "JNR Deforestation Risk Maps",
    "section": "Times series visualization",
    "text": "Times series visualization\n\nsummary(as.data.frame(ro_samples_sf))"
  },
  {
    "objectID": "VT0007-deforestation-map.html#deforestation-binary-map",
    "href": "VT0007-deforestation-map.html#deforestation-binary-map",
    "title": "JNR Deforestation Risk Maps",
    "section": "Deforestation binary map",
    "text": "Deforestation binary map"
  },
  {
    "objectID": "VT0007-deforestation-map.html#deforestation-risk-map",
    "href": "VT0007-deforestation-map.html#deforestation-risk-map",
    "title": "JNR Deforestation Risk Maps",
    "section": "Deforestation risk map",
    "text": "Deforestation risk map"
  }
]